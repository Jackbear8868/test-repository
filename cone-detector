import numpy as np
from matplotlib import pyplot as plt
def state_evaluate(
    *circle: (float, float),
    rectangle_size: (float, float) = (2., 2.),
    circle_radius: float = 2**0.5,
    threshold: float = 0.5,
    resolution: float = 1e-3,
    plot_status: bool = True,
    scale_factor: float = 4.,
):
    try:
        circle[0]
    except IndexError:
        return
    figsize = (rectangle_size[0]*scale_factor, rectangle_size[1]*scale_factor)
    xx, yy = np.meshgrid(np.arange(0., rectangle_size[0]+resolution, resolution), \
                         np.arange(0., rectangle_size[1]+resolution, resolution))
    interpolate = np.zeros_like(xx)
    for x, y in circle:
        distance = np.sqrt((y - yy)**2 + (x - xx)**2)
        u = np.maximum(circle_radius - distance, 0.)
        np.add(interpolate, u, out=interpolate)
    np.divide(interpolate, circle_radius, out=interpolate)
    if plot_status:
        fig = plt.figure(figsize=figsize)
        plt.contourf(xx, yy, interpolate, 10, cmap='coolwarm')
        if not interpolate.min() > threshold:
            plt.contourf(xx, yy, interpolate>=threshold, levels=[0., 0.5], alpha=0.7, cmap='gray')
        C = plt.contour(xx, yy, interpolate, 10, linestyles='dashed', alpha=0.7)
        plt.clabel(C, inline=True, fontsize=14, colors='black')
        plt.show()
    if interpolate.min() >= threshold:
        print("Pass!")
    else:
        print("Failed!")
    del xx, yy, distance, u
    return interpolate
